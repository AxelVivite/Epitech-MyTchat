{
  "openapi": "3.0.3",
  "info": {
    "title": "JS Full Stack Backend",
    "version": "1.0.0"
  },
  "paths": {
    "/login/register": {
      "post": {
        "tags": [
          "login"
        ],
        "description": "Registers a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the new user id, a token, and the time it will take for the token to expire",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigninResult"
                }
              }
            }
          },
          "409": {
            "description": "Email is already taken"
          }
        }
      }
    },
    "/login/signin/{email}": {
      "get": {
        "tags": [
          "login"
        ],
        "description": "Sign in and get a token",
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the user id, a token, and the time it will take for the token to expire",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigninResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, details are returned, can be because of: MissingToken, BadAuthType (ex: Bearer instead of Basic)"
          },
          "401": {
            "description": "Invalid password"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/login/info": {
      "get": {
        "tags": [
          "login"
        ],
        "description": "Get info on a user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the user's email and the ids of the rooms they're in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "email",
                    "rooms"
                  ],
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "string"
                    },
                    "rooms": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MongoId"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, details are returned, can be because of: MissingToken, BadAuthType (ex: Basic instead of Bearer)"
          },
          "401": {
            "description": "Bad token (not created by this server or expired)"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/login/delete": {
      "delete": {
        "tags": [
          "login"
        ],
        "description": "Delete a user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the user's email and the ids of the rooms they're in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "email",
                    "rooms"
                  ],
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "string"
                    },
                    "rooms": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MongoId"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, details are returned, can be because of: MissingToken, BadAuthType (ex: Basic instead of Bearer)"
          },
          "401": {
            "description": "Bad token (not created by this server or expired)"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/room/create": {
      "post": {
        "tags": [
          "room"
        ],
        "description": "Create a new room",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "otherUsers"
                ],
                "properties": {
                  "otherUsers": {
                    "type": "array",
                    "description": "Other users (besides the one calling the route) to give access to the route",
                    "items": {
                      "$ref": "#/components/schemas/MongoId"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the id of the room that was created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "roomId"
                  ],
                  "properties": {
                    "roomId": {
                      "$ref": "#/components/schemas/MongoId"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, details are returned, can be because of: MissingToken, BadAuthType (ex: Basic instead of Bearer)"
          },
          "401": {
            "description": "Bad token (not created by this server or expired)"
          },
          "404": {
            "description": "Any of the user are not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "missingUsers"
                  ],
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "missingUsers": {
                      "type": "array",
                      "description": "Users that could not be found",
                      "items": {
                        "$ref": "#/components/schemas/MongoId"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/room/info/{roomId}": {
      "get": {
        "tags": [
          "room"
        ],
        "description": "Get info on a room",
        "parameters": [
          {
            "in": "path",
            "name": "roomId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/MongoId"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns info on the room",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "users",
                    "posts"
                  ],
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MongoId"
                      }
                    },
                    "posts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MongoId"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, details are returned, can be because of: MissingToken, BadAuthType (ex: Basic instead of Bearer)"
          },
          "401": {
            "description": "Bad token (not created by this server or expired) or user doesn't have access to the room"
          },
          "404": {
            "description": "The user or the room was not found"
          }
        }
      }
    },
    "/room/delete/{roomId}": {
      "delete": {
        "tags": [
          "room"
        ],
        "description": "Delete a room",
        "parameters": [
          {
            "in": "path",
            "name": "roomId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/MongoId"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns info on the room",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "users",
                    "posts"
                  ],
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MongoId"
                      }
                    },
                    "posts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MongoId"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, details are returned, can be because of: MissingToken, BadAuthType (ex: Basic instead of Bearer)"
          },
          "401": {
            "description": "Bad token (not created by this server or expired) or user doesn't have access to the room"
          },
          "404": {
            "description": "The user or the room was not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MongoId": {
        "type": "string",
        "format": "uuid",
        "example": "632999f5bb5e77c72e9bf905"
      },
      "SigninResult": {
        "type": "object",
        "required": [
          "userId",
          "token",
          "expiresIn"
        ],
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid",
            "example": "632999f5bb5e77c72e9bf905"
          },
          "token": {
            "type": "string",
            "description": "JSON Web Token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MzI5OWEzNTI1ODUzMzY1NTBjYjI2NDkiLCJpYXQiOjE2NjM2NzA4MzcsImV4cCI6MTY2NDUzNDgzN30.J6AOP4OP6ftFA0ahF8_Up29y23qD-gZF_OqKIYwNj7s"
          },
          "expiresIn": {
            "type": "string",
            "description": "TTL of the token, format explained at https://github.com/vercel/ms#examples",
            "example": "10 days"
          }
        }
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [],
  "security": [
    {
      "basicAuth": [],
      "bearerAuth": []
    }
  ]
}